{"ast":null,"code":"var _jsxFileName = \"/home/note/bankpayapp/src/templates/SnackGame/SnackGame.tsx\";\nimport * as React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class SnakeGame extends React.Component {\n  render() {\n    let canvas = document.getElementById(\"snake\"); // criar elemento que irá rodar o jogo\n\n    let context = canvas.getContext(\"2d\");\n    let box = 32;\n    let snake = []; // criar cobrinha como lista, já que ela vai ser uma série de coordenadas, que quando pintadas, criam os quadradinhos\n\n    snake[0] = {\n      x: 8 * box,\n      y: 8 * box\n    };\n    let direction = \"right\";\n    let food = {\n      x: Math.floor(Math.random() * 15 + 1) * box,\n      y: Math.floor(Math.random() * 15 + 1) * box\n    };\n\n    function createBG() {\n      context.fillStyle = \"white\";\n      context.fillRect(0, 0, 16 * box, 16 * box); // desenha o retângulo usando x e y e a largura e altura setadas\n    }\n\n    function createSnake() {\n      for (let i = 0; i < snake.length; i++) {\n        context.fillStyle = \"green\";\n        context.fillRect(snake[i].x, snake[i].y, box, box);\n      }\n    }\n\n    function createFood() {\n      context.fillStyle = \"red\";\n      context.fillRect(food.x, food.y, box, box);\n    }\n\n    document.addEventListener('keydown', update); // quando um evento acontece, detecta e chama uma função\n\n    function update(event) {\n      if (event.keyCode == 37 && direction != 'right') direction = 'left';\n      if (event.keyCode == 38 && direction != 'down') direction = 'up';\n      if (event.keyCode == 39 && direction != 'left') direction = 'right';\n      if (event.keyCode == 40 && direction != 'up') direction = 'down';\n    }\n\n    function startGame() {\n      if (snake[0].x > 15 * box && direction == \"right\") snake[0].x = 0;\n      if (snake[0].x < 0 && direction == 'left') snake[0].x = 16 * box;\n      if (snake[0].y > 15 * box && direction == \"down\") snake[0].y = 0;\n      if (snake[0].y < 0 && direction == 'up') snake[0].y = 16 * box;\n\n      for (let i = 1; i < snake.length; i++) {\n        if (snake[0].x == snake[i].x && snake[0].y == snake[i].y) {\n          clearInterval(game);\n          alert('Game Over :(');\n        }\n      }\n\n      createBG();\n      createSnake();\n      createFood();\n      let snakeX = snake[0].x;\n      let snakeY = snake[0].y;\n      if (direction == \"right\") snakeX += box;\n      if (direction == \"left\") snakeX -= box;\n      if (direction == \"up\") snakeY -= box;\n      if (direction == \"down\") snakeY += box;\n\n      if (snakeX != food.x || snakeY != food.y) {\n        snake.pop(); // pop tira o último elemento da lista\n      } else {\n        food.x = Math.floor(Math.random() * 15 + 1) * box;\n        food.y = Math.floor(Math.random() * 15 + 1) * box;\n      }\n\n      let newHead = {\n        x: snakeX,\n        y: snakeY\n      };\n      snake.unshift(newHead); // método unshift adiciona o primeiro quadrado da cobrinha\n    }\n\n    let game = setInterval(startGame, 100);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        id: \"snack\",\n        width: \"400\",\n        height: \"400\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"names":["React","SnakeGame","Component","render","canvas","document","getElementById","context","getContext","box","snake","x","y","direction","food","Math","floor","random","createBG","fillStyle","fillRect","createSnake","i","length","createFood","addEventListener","update","event","keyCode","startGame","clearInterval","game","alert","snakeX","snakeY","pop","newHead","unshift","setInterval"],"sources":["/home/note/bankpayapp/src/templates/SnackGame/SnackGame.tsx"],"sourcesContent":["import * as React from 'react';\n\nexport interface ISnakeGameProps {\n}\n\nexport default class SnakeGame extends React.Component<ISnakeGameProps> {\n\n  public render() {\n\n    let canvas: any = document.getElementById(\"snake\"); // criar elemento que irá rodar o jogo\n    let context = canvas.getContext(\"2d\");\n    let box = 32;\n\n    let snake: any = []; // criar cobrinha como lista, já que ela vai ser uma série de coordenadas, que quando pintadas, criam os quadradinhos\n    snake[0] = {\n        x: 8 * box,\n        y: 8 * box\n    };\n\n    let direction = \"right\";\n\n    let food = {\n        x: Math.floor(Math.random() * 15 + 1) * box,\n        y: Math.floor(Math.random() * 15 + 1) * box\n    }\n\n    function createBG() {\n        context.fillStyle = \"white\";\n        context.fillRect(0,0,16 * box, 16 * box); // desenha o retângulo usando x e y e a largura e altura setadas\n    }\n\n    function createSnake() {\n        for (let i = 0; i < snake.length; i++) {\n            context.fillStyle = \"green\";\n            context.fillRect(snake[i].x, snake[i].y, box, box);\n        }\n    }\n\n    function createFood() {\n        context.fillStyle = \"red\";\n        context.fillRect(food.x, food.y, box, box);\n    }\n\n    document.addEventListener('keydown', update); // quando um evento acontece, detecta e chama uma função\n\n    function update(event: any) {\n        if (event.keyCode == 37 && direction != 'right') direction = 'left';\n        if (event.keyCode == 38 && direction != 'down') direction = 'up';\n        if (event.keyCode == 39 && direction != 'left') direction = 'right';\n        if (event.keyCode == 40 && direction != 'up') direction = 'down';\n    }\n\n    function startGame() {\n        if (snake[0].x > 15 * box && direction == \"right\") snake[0].x = 0;\n        if (snake[0].x < 0 && direction == 'left') snake[0].x = 16 * box;\n        if (snake[0].y > 15 * box && direction == \"down\") snake[0].y = 0;\n        if (snake[0].y < 0 && direction == 'up') snake[0].y = 16 * box;\n\n        for (let i = 1; i < snake.length; i++) {\n            if (snake[0].x == snake[i].x && snake[0].y == snake[i].y) {\n                clearInterval(game);\n                alert('Game Over :(');\n            }\n        }\n\n        createBG();\n        createSnake();\n        createFood();\n\n        let snakeX = snake[0].x;\n        let snakeY = snake[0].y;\n\n        if( direction == \"right\") snakeX += box;\n        if (direction == \"left\") snakeX -= box;\n        if (direction == \"up\") snakeY -= box;\n        if (direction == \"down\") snakeY += box;\n\n        if (snakeX != food.x || snakeY != food.y) {\n            snake.pop(); // pop tira o último elemento da lista\n        } else {\n            food.x = Math.floor(Math.random() * 15 + 1) * box;\n            food.y = Math.floor(Math.random() * 15 + 1) * box;\n        }\n\n        let newHead = {\n            x: snakeX,\n            y: snakeY\n        };\n\n        snake.unshift(newHead); // método unshift adiciona o primeiro quadrado da cobrinha\n    }\n\n    let game = setInterval(startGame, 100);\n\n    return (\n      <div>\n        <canvas id=\"snack\" width=\"400\" height=\"400\"></canvas>\n      </div>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}