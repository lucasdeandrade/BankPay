{"ast":null,"code":"var _jsxFileName = \"/home/note/Lucas/bankpayapp2/src/components/Highcharts/StackedColumn/StackedColumn.tsx\";\nimport * as React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StackedColumn = props => {\n  /*#__PURE__*/\n  _jsxDEV(\"script\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n\n  google.charts.load('current', {\n    'packages': ['corechart']\n  }); // Set a callback to run when the Google Visualization API is loaded.\n\n  google.charts.setOnLoadCallback(drawChart); // Callback that creates and populates a data table,\n  // instantiates the pie chart, passes in the data and\n  // draws it.\n\n  function drawChart() {\n    // Create the data table.\n    var data = new google.visualization.DataTable();\n    data.addColumn('string', 'Topping');\n    data.addColumn('number', 'Slices');\n    data.addRows([['Mushrooms', 3], ['Onions', 1], ['Olives', 1], ['Zucchini', 1], ['Pepperoni', 2]]); // Set chart options\n\n    var options = {\n      'title': 'How Much Pizza I Ate Last Night',\n      'width': 400,\n      'height': 300\n    }; // Instantiate and draw our chart, passing in some options.\n\n    var chart = new google.visualization.PieChart(document.getElementById('chart_div'));\n    chart.draw(data, options);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: /*#__PURE__*/_jsxDEV(\"figure\", {\n      className: \"highcharts-figure\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"highcharts-description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 10\n  }, this);\n};\n\n_c = StackedColumn;\nexport default StackedColumn;\n\nvar _c;\n\n$RefreshReg$(_c, \"StackedColumn\");","map":{"version":3,"names":["React","StackedColumn","props","google","charts","load","setOnLoadCallback","drawChart","data","visualization","DataTable","addColumn","addRows","options","chart","PieChart","document","getElementById","draw"],"sources":["/home/note/Lucas/bankpayapp2/src/components/Highcharts/StackedColumn/StackedColumn.tsx"],"sourcesContent":["import * as React from 'react';\n\ninterface IStackedColumnProps {\n}\n\nconst StackedColumn: React.FunctionComponent<IStackedColumnProps> = (props) => {\n\n    <script>\n        \n    </script>\n    google.charts.load('current', {'packages':['corechart']});\n\n      // Set a callback to run when the Google Visualization API is loaded.\n      google.charts.setOnLoadCallback(drawChart);\n\n      // Callback that creates and populates a data table,\n      // instantiates the pie chart, passes in the data and\n      // draws it.\n      function drawChart() {\n\n        // Create the data table.\n        var data = new google.visualization.DataTable();\n        data.addColumn('string', 'Topping');\n        data.addColumn('number', 'Slices');\n        data.addRows([\n          ['Mushrooms', 3],\n          ['Onions', 1],\n          ['Olives', 1],\n          ['Zucchini', 1],\n          ['Pepperoni', 2]\n        ]);\n\n        // Set chart options\n        var options = {'title':'How Much Pizza I Ate Last Night',\n                       'width':400,\n                       'height':300};\n\n        // Instantiate and draw our chart, passing in some options.\n        var chart = new google.visualization.PieChart(document.getElementById('chart_div'));\n        chart.draw(data, options);\n      }\n\n  return <div className='card'>\n            <figure className=\"highcharts-figure\">\n                <div id=\"container\"></div>\n                <p className=\"highcharts-description\">\n                    \n                </p>\n            </figure>\n        </div>\n  \n};\n\nexport default StackedColumn;\n"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;AAKA,MAAMC,aAA2D,GAAIC,KAAD,IAAW;EAE3E;EAAA;IAAA;IAAA;IAAA;EAAA;;EAGAC,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmB,SAAnB,EAA8B;IAAC,YAAW,CAAC,WAAD;EAAZ,CAA9B,EAL2E,CAOzE;;EACAF,MAAM,CAACC,MAAP,CAAcE,iBAAd,CAAgCC,SAAhC,EARyE,CAUzE;EACA;EACA;;EACA,SAASA,SAAT,GAAqB;IAEnB;IACA,IAAIC,IAAI,GAAG,IAAIL,MAAM,CAACM,aAAP,CAAqBC,SAAzB,EAAX;IACAF,IAAI,CAACG,SAAL,CAAe,QAAf,EAAyB,SAAzB;IACAH,IAAI,CAACG,SAAL,CAAe,QAAf,EAAyB,QAAzB;IACAH,IAAI,CAACI,OAAL,CAAa,CACX,CAAC,WAAD,EAAc,CAAd,CADW,EAEX,CAAC,QAAD,EAAW,CAAX,CAFW,EAGX,CAAC,QAAD,EAAW,CAAX,CAHW,EAIX,CAAC,UAAD,EAAa,CAAb,CAJW,EAKX,CAAC,WAAD,EAAc,CAAd,CALW,CAAb,EANmB,CAcnB;;IACA,IAAIC,OAAO,GAAG;MAAC,SAAQ,iCAAT;MACC,SAAQ,GADT;MAEC,UAAS;IAFV,CAAd,CAfmB,CAmBnB;;IACA,IAAIC,KAAK,GAAG,IAAIX,MAAM,CAACM,aAAP,CAAqBM,QAAzB,CAAkCC,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAlC,CAAZ;IACAH,KAAK,CAACI,IAAN,CAAWV,IAAX,EAAiBK,OAAjB;EACD;;EAEL,oBAAO;IAAK,SAAS,EAAC,MAAf;IAAA,uBACG;MAAQ,SAAS,EAAC,mBAAlB;MAAA,wBACI;QAAK,EAAE,EAAC;MAAR;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAG,SAAS,EAAC;MAAb;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADH;IAAA;IAAA;IAAA;EAAA,QAAP;AASD,CA9CD;;KAAMZ,a;AAgDN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}